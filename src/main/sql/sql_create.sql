-- REGION Table Create SQL
CREATE TABLE REGION
(
    REG_ID      NUMBER          , 
    REG_NAME    VARCHAR2(20)    , 
    REG_LAT     NUMBER          , 
    REG_LONG    NUMBER          , 
    CONSTRAINT REGION_PK PRIMARY KEY (REG_ID)
);

CREATE SEQUENCE REGION_SEQ
START WITH 1
INCREMENT BY 1;


-- TUTEE Table Create SQL
CREATE TABLE TUTEE
(
    MEMBER_ID     NUMBER            NOT NULL, 
    PASSWORD      VARCHAR2(100)     NULL, 
    NICKNAME      VARCHAR2(50)      NOT NULL, 
    PHONENUM      VARCHAR2(50)      NOT NULL, 
    SIGN_DATE     DATE DEFAULT SYSDATE, 
    LOGIN_MAIL    VARCHAR2(100)     NOT NULL, 
    REG_ID        NUMBER            , 
    PROF_PATH     VARCHAR2(1000) DEFAULT 'images/default_face.jpeg'  NOT NULL, 
    CONSTRAINT TUTEE_PK PRIMARY KEY (MEMBER_ID)
);


CREATE SEQUENCE TUTEE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTEE
    ADD CONSTRAINT FK_TUTEE_REG_ID_REGION_REG_ID FOREIGN KEY (REG_ID)
        REFERENCES REGION (REG_ID);


-- TUTORING_TUTEE Table Create SQL
CREATE TABLE TUTORING_TUTEE
(
    TUTORING_TUTEE_ID    NUMBER            NOT NULL, 
    TUTORING_TITLE       VARCHAR2(100)     NULL, 
    MEMBER_ID            NUMBER            NULL, 
    INTRO                VARCHAR2(1000)    NULL, 
    ENTIRE_PERIOD        NUMBER            NULL, 
    MAX_NUM              NUMBER            NULL, 
    MIN_NUM              NUMBER            NULL, 
    REG_ID               NUMBER            NULL, 
    ENTRY_COST           NUMBER            NULL, 
    DEADLINE             DATE              NULL, 
    TCOMMENT              VARCHAR2(2000)    NULL, 
    UPLOAD_DATE          DATE DEFAULT SYSDATE              NULL, 
    CONSTRAINT TUTORING_TUTEE_PK PRIMARY KEY (TUTORING_TUTEE_ID)
);


CREATE SEQUENCE TUTORING_TUTEE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_TUTEE
    ADD CONSTRAINT FK_TUTORING_TUTEE_MEMBER_ID_TU FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTORING_TUTEE
    ADD CONSTRAINT FK_TUTORING_TUTEE_REG_ID_REGIO FOREIGN KEY (REG_ID)
        REFERENCES REGION (REG_ID);


-- TUTOR_INFO Table Create SQL
CREATE TABLE TUTOR_INFO
(
    TUTOR_ID      NUMBER            NOT NULL, 
    MEMBER_ID     NUMBER            NULL, 
    TUTOR_NAME    VARCHAR2(50)      NULL, 
    TELEPHONE     VARCHAR2(20)      NULL, 
    INTRO         VARCHAR2(1000)    NULL, 
    JOIN_DATE     DATE DEFAULT SYSDATE              NULL, 
    CONSTRAINT TUTOR_INFO_PK PRIMARY KEY (TUTOR_ID)
);

CREATE SEQUENCE TUTOR_INFO_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_INFO
    ADD CONSTRAINT FK_TUTOR_INFO_MEMBER_ID_TUTEE_ FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- PROGRESS_LV Table Create SQL
CREATE TABLE PROGRESS_LV
(
    PROGRESS_ID      NUMBER          NOT NULL, 
    PROGRESS_NAME    VARCHAR2(50)    NULL, 
    CONSTRAINT PROGRESS_LV_PK PRIMARY KEY (PROGRESS_ID)
);

CREATE SEQUENCE PROGRESS_LV_SEQ
START WITH 1
INCREMENT BY 1;



-- TUTORING_TUTOR Table Create SQL
CREATE TABLE TUTORING_TUTOR
(
    TUTORING_TUTOR_ID    NUMBER            NOT NULL, 
    TUTOR_ID             NUMBER            NULL, 
    TITLE                VARCHAR2(100)     NULL, 
    INTRO                VARCHAR2(1000)    NULL, 
    START_DATE           DATE              NULL, 
    ENTIRE_PERIOD        NUMBER            NULL, 
    MIN_NUM              NUMBER            NULL, 
    MAX_NUM              NUMBER            NULL, 
    REG_ID               NUMBER            NULL, 
    ENTRY_COST           NUMBER(10)        NULL, 
    PROGRESS_ID          NUMBER            NULL, 
    TUTORING_TUTEE_ID    NUMBER            NULL, 
    START_TIME           VARCHAR2(20)      NULL, 
    END_TIME             VARCHAR2(20)      NULL, 
    THUMBNAIL_PATH       VARCHAR2(1000)    NULL, 
    CONSTRAINT TUTORING_TUTOR_PK PRIMARY KEY (TUTORING_TUTOR_ID)
);

CREATE SEQUENCE TUTORING_TUTOR_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_TUTOR
    ADD CONSTRAINT FK_TUTORING_TUTOR_TUTOR_ID_TUT FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);

ALTER TABLE TUTORING_TUTOR
    ADD CONSTRAINT FK_TUTORING_TUTOR_TUTORING_TUT FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTORING_TUTOR
    ADD CONSTRAINT FK_TUTORING_TUTOR_REG_ID_REGIO FOREIGN KEY (REG_ID)
        REFERENCES REGION (REG_ID);

ALTER TABLE TUTORING_TUTOR
    ADD CONSTRAINT FK_TUTORING_TUTOR_PROGRESS_ID_ FOREIGN KEY (PROGRESS_ID)
        REFERENCES PROGRESS_LV (PROGRESS_ID);


-- COUPON Table Create SQL
CREATE TABLE COUPON
(
    COU_ID       NUMBER           NOT NULL, 
    COU_NAME     VARCHAR2(100)    NULL, 
    COU_PRICE    NUMBER           NULL, 
    CONSTRAINT COUPON_PK PRIMARY KEY (COU_ID)
);

CREATE SEQUENCE COUPON_SEQ
START WITH 1
INCREMENT BY 1;


-- ISSUE_COUPON Table Create SQL
CREATE TABLE ISSUE_COUPON
(
    ISSU_ID      NUMBER    NOT NULL, 
    MEMBER_ID    NUMBER    NULL, 
    COU_ID       NUMBER    NULL, 
    ISSU_DATE    DATE DEFAULT SYSDATE      NULL, 
    CONSTRAINT ISSUE_COUPON_PK PRIMARY KEY (ISSU_ID)
);

CREATE SEQUENCE ISSUE_COUPON_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE ISSUE_COUPON
    ADD CONSTRAINT FK_ISSUE_COUPON_MEMBER_ID_TUTE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE ISSUE_COUPON
    ADD CONSTRAINT FK_ISSUE_COUPON_COU_ID_COUPON_ FOREIGN KEY (COU_ID)
        REFERENCES COUPON (COU_ID);


-- TUTORING_ENROLL Table Create SQL
CREATE TABLE TUTORING_ENROLL
(
    ENROLL_ID            NUMBER          NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER          NULL, 
    MEMBER_ID            NUMBER          NULL, 
    ENROLL_DATE          DATE DEFAULT SYSDATE           NULL, 
    ISSU_ID              NUMBER          NULL, 
    PAYMENT              VARCHAR2(20)    NULL, 
    DISCOUNT_COST        NUMBER          NULL, 
    PAYMENT_COST         NUMBER          NULL, 
    CONSTRAINT TUTORING_ENROLL_PK PRIMARY KEY (ENROLL_ID)
);

CREATE SEQUENCE TUTORING_ENROLL_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_ENROLL
    ADD CONSTRAINT FK_TUTORING_ENROLL_TUTORING_TU FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);

ALTER TABLE TUTORING_ENROLL
    ADD CONSTRAINT FK_TUTORING_ENROLL_MEMBER_ID_T FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTORING_ENROLL
    ADD CONSTRAINT FK_TUTORING_ENROLL_ISSU_ID_ISS FOREIGN KEY (ISSU_ID)
        REFERENCES ISSUE_COUPON (ISSU_ID);


-- REP_CAT Table Create SQL
CREATE TABLE REP_CAT
(
    REP_ID      NUMBER          NOT NULL, 
    REP_NAME    VARCHAR2(100)    NULL, 
    CONSTRAINT REP_CAT_PK PRIMARY KEY (REP_ID)
);


CREATE SEQUENCE REP_CAT_SEQ
START WITH 1
INCREMENT BY 1;


-- CATEGORIE Table Create SQL
CREATE TABLE CATEGORIE
(
    CATEGORIE_ID      NUMBER          NOT NULL, 
    CATEGORIE_NAME    VARCHAR2(50)    NULL, 
    CONSTRAINT CATEGORIE_PK PRIMARY KEY (CATEGORIE_ID)
);

CREATE SEQUENCE CATEGORIE_SEQ
START WITH 1
INCREMENT BY 1;



-- POST_HEAD Table Create SQL
CREATE TABLE POST_HEAD
(
    HEAD_ID      NUMBER          NOT NULL, 
    HEAD_NAME    VARCHAR2(50)    NULL, 
    CONSTRAINT POST_HEAD_PK PRIMARY KEY (HEAD_ID)
);

CREATE SEQUENCE POST_HEAD_SEQ
START WITH 1
INCREMENT BY 1;




-- QTBOARD Table Create SQL
CREATE TABLE QTBOARD
(
    QT_ID        NUMBER           NOT NULL, 
    HEAD_ID      NUMBER           NULL, 
    MEMBER_ID    NUMBER           NULL, 
    TITLE        VARCHAR2(100)    NULL, 
    CONTENT      CLOB             NULL, 
    HITCOUNT     NUMBER DEFAULT 0   NULL, 
    WRITEDATE    DATE DEFAULT SYSDATE             NULL, 
    CONSTRAINT QTBOARD_PK PRIMARY KEY (QT_ID)
);

CREATE SEQUENCE QTBOARD_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD
    ADD CONSTRAINT FK_QTBOARD_HEAD_ID_POST_HEAD_H FOREIGN KEY (HEAD_ID)
        REFERENCES POST_HEAD (HEAD_ID);

ALTER TABLE QTBOARD
    ADD CONSTRAINT FK_QTBOARD_MEMBER_ID_TUTEE_MEM FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- TECH_LEVEL Table Create SQL
CREATE TABLE TECH_LEVEL
(
    LEVEL_ID      NUMBER          NOT NULL, 
    LEVEL_NAME    VARCHAR2(30)    NULL, 
    CONSTRAINT TECH_LEVEL_PK PRIMARY KEY (LEVEL_ID)
);

CREATE SEQUENCE TECH_LEVEL_SEQ
START WITH 1
INCREMENT BY 1;



-- INTEREST Table Create SQL
CREATE TABLE INTEREST
(
    INTEREST_ID     NUMBER          NULL, 
    INTEREST_CAT    VARCHAR2(50)    NULL, 
    CATEGORIE_ID    NUMBER          NULL,
    CONSTRAINT INTEREST_ID_PK PRIMARY KEY(INTEREST_ID)
);

CREATE SEQUENCE INTEREST_SEQ
START WITH 1
NOCACHE;

ALTER TABLE INTEREST
    ADD CONSTRAINT FK_INTEREST_CATEGORIE_ID_CATEG FOREIGN KEY (CATEGORIE_ID)
        REFERENCES CATEGORIE (CATEGORIE_ID);


-- TTBOARD Table Create SQL
CREATE TABLE TTBOARD
(
    TT_ID         NUMBER          NOT NULL, 
    TT_TITLE      VARCHAR2(100)    NULL, 
    TT_CONTENT    CLOB            NULL, 
    WRITEDATE     DATE            NULL, 
    HITCOUNT      NUMBER DEFAULT 0          NULL, 
    ENROLL_ID     NUMBER          NULL, 
    CONSTRAINT TTBOARD_PK PRIMARY KEY (TT_ID)
);

CREATE SEQUENCE TTBOARD_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTBOARD
    ADD CONSTRAINT FK_TTBOARD_ENROLL_ID_TUTORING_ FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);


-- QTBOARD_COMM Table Create SQL
CREATE TABLE QTBOARD_COMM
(
    COMM_ID        NUMBER       NOT NULL, 
    MEMBER_ID      NUMBER       NULL, 
    QT_ID          NUMBER       NULL, 
    PAR_COMM_ID    NUMBER       NULL, 
    COMM_DEPT      NUMBER(3)    NULL, 
    CONTENT        VARCHAR2(2000) NULL,
    WRITEDATE      DATE DEFAULT SYSDATE         NULL, 
    DELCHECK       VARCHAR2(2) DEFAULT 'N',
    CONSTRAINT QTBOARD_COMM_PK PRIMARY KEY (COMM_ID)
);

CREATE SEQUENCE QTBOARD_COMM_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD_COMM
    ADD CONSTRAINT FK_QTBOARD_COMM_MEMBER_ID_TUTE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE QTBOARD_COMM
    ADD CONSTRAINT FK_QTBOARD_COMM_QT_ID_QTBOARD_ FOREIGN KEY (QT_ID)
        REFERENCES QTBOARD (QT_ID);

ALTER TABLE QTBOARD_COMM
    ADD CONSTRAINT FK_QTBOARD_COMM_PAR_COMM_ID_QT FOREIGN KEY (PAR_COMM_ID)
        REFERENCES QTBOARD_COMM (COMM_ID);


-- TUTOR_FAQ Table Create SQL
CREATE TABLE TUTOR_FAQ
(
    FAQ_ID               NUMBER           NOT NULL, 
    MEMBER_ID            NUMBER           NULL, 
    TUTORING_TUTOR_ID    NUMBER           NULL, 
    FAQ_CONTENT          VARCHAR2(500)    NULL, 
    FAQ_DATE             DATE DEFAULT SYSDATE             NULL, 
    PAR_FAQ_ID           NUMBER           NULL, 
    CONSTRAINT TUTOR_FAQ_PK PRIMARY KEY (FAQ_ID)
);

CREATE SEQUENCE TUTOR_FAQ_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_FAQ
    ADD CONSTRAINT FK_TUTOR_FAQ_TUTORING_TUTOR_ID FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);

ALTER TABLE TUTOR_FAQ
    ADD CONSTRAINT FK_TUTOR_FAQ_MEMBER_ID_TUTEE_M FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTOR_FAQ
    ADD CONSTRAINT FK_TUTOR_FAQ_PAR_FAQ_ID_TUTOR_ FOREIGN KEY (PAR_FAQ_ID)
        REFERENCES TUTOR_FAQ (FAQ_ID);


-- TUTEE_FAQ Table Create SQL
CREATE TABLE TUTEE_FAQ
(
    FAQ_ID               NUMBER           NOT NULL, 
    MEMBER_ID            NUMBER           NULL, 
    TUTORING_TUTEE_ID    NUMBER           NULL, 
    FAQ_CONTENT          VARCHAR2(500)    NULL, 
    FAQ_DATE             DATE DEFAULT SYSDATE             NULL, 
    PAR_FAQ_ID           NUMBER           NULL, 
    CONSTRAINT TUTEE_FAQ_PK PRIMARY KEY (FAQ_ID)
);

CREATE SEQUENCE TUTEE_FAQ_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTEE_FAQ
    ADD CONSTRAINT FK_TUTEE_FAQ_MEMBER_ID_TUTEE_M FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTEE_FAQ
    ADD CONSTRAINT FK_TUTEE_FAQ_TUTORING_TUTEE_ID FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTEE_FAQ
    ADD CONSTRAINT FK_TUTEE_FAQ_PAR_FAQ_ID_TUTEE_ FOREIGN KEY (PAR_FAQ_ID)
        REFERENCES TUTEE_FAQ (FAQ_ID);


-- TTBOARD_COMM Table Create SQL
CREATE TABLE TTBOARD_COMM
(
    TT_COMM_ID      NUMBER            NOT NULL, 
    TT_ID           NUMBER            NULL, 
    CONTENT    VARCHAR2(1000)    NULL, 
    PAR_COMM_ID     NUMBER            NULL, 
    COMM_DEPT       NUMBER            NULL, 
    WRITEDATE       DATE DEFAULT SYSDATE              NULL, 
    ENROLL_ID       NUMBER            NULL, 
    CONSTRAINT TTBOARD_COMM_PK PRIMARY KEY (TT_COMM_ID)
);

CREATE SEQUENCE TTBOARD_COMM_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTBOARD_COMM
    ADD CONSTRAINT FK_TTBOARD_COMM_PAR_COMM_ID_TT FOREIGN KEY (PAR_COMM_ID)
        REFERENCES TTBOARD_COMM (TT_COMM_ID);

ALTER TABLE TTBOARD_COMM
    ADD CONSTRAINT FK_TTBOARD_COMM_TT_ID_TTBOARD_ FOREIGN KEY (TT_ID)
        REFERENCES TTBOARD (TT_ID);

ALTER TABLE TTBOARD_COMM
    ADD CONSTRAINT FK_TTBOARD_COMM_ENROLL_ID_TUTO FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);


-- MACH_LV Table Create SQL
CREATE TABLE MACH_LV
(
    MACH_LV_ID      NUMBER          NOT NULL, 
    MACH_LV_NAME    VARCHAR2(20)    NULL, 
    CONSTRAINT MACH_LV_PK PRIMARY KEY (MACH_LV_ID)
);

CREATE SEQUENCE MACH_LV_SEQ
START WITH 1
INCREMENT BY 1;




-- TIME_DIVISION Table Create SQL
CREATE TABLE TIME_DIVISION
(
    TIME_CAT_ID    NUMBER          NOT NULL, 
    WEEDAY_END     VARCHAR2(20)    NULL, 
    AM_PM          VARCHAR2(20)    NULL, 
    CONSTRAINT TIME_DIVISION_PK PRIMARY KEY (TIME_CAT_ID)
);

CREATE SEQUENCE TIME_DIVISION_SEQ
START WITH 1
INCREMENT BY 1;



-- TUTOR_APPLY Table Create SQL
CREATE TABLE TUTOR_APPLY
(
    APPLY_ID             NUMBER    NOT NULL, 
    TUTOR_ID             NUMBER    NULL, 
    TUTORING_TUTEE_ID    NUMBER    NULL, 
    APPLY_DATE           DATE DEFAULT SYSDATE      NULL, 
    MACH_LV_ID           NUMBER    NULL, 
    CONSTRAINT TUTOR_APPLY_PK PRIMARY KEY (APPLY_ID)
);

CREATE SEQUENCE TUTOR_APPLY_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_APPLY
    ADD CONSTRAINT FK_TUTOR_APPLY_TUTORING_TUTEE_ FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTOR_APPLY
    ADD CONSTRAINT FK_TUTOR_APPLY_TUTOR_ID_TUTOR_ FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);

ALTER TABLE TUTOR_APPLY
    ADD CONSTRAINT FK_TUTOR_APPLY_MACH_LV_ID_MACH FOREIGN KEY (MACH_LV_ID)
        REFERENCES MACH_LV (MACH_LV_ID);


-- TUTOR_INVITE Table Create SQL
CREATE TABLE TUTOR_INVITE
(
    INVITE_ID            NUMBER    NOT NULL, 
    TUTOR_ID             NUMBER    NULL, 
    TUTORING_TUTEE_ID    NUMBER    NOT NULL, 
    INVITE_DATE          DATE DEFAULT SYSDATE      NULL, 
    MACH_LV_ID           NUMBER    NULL, 
    CONSTRAINT TUTOR_INVITE_PK PRIMARY KEY (INVITE_ID)
);

CREATE SEQUENCE TUTOR_INVITE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_INVITE
    ADD CONSTRAINT FK_TUTOR_INVITE_TUTORING_TUTEE FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTOR_INVITE
    ADD CONSTRAINT FK_TUTOR_INVITE_TUTOR_ID_TUTOR FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);

ALTER TABLE TUTOR_INVITE
    ADD CONSTRAINT FK_TUTOR_INVITE_MACH_LV_ID_MAC FOREIGN KEY (MACH_LV_ID)
        REFERENCES MACH_LV (MACH_LV_ID);


-- BANK Table Create SQL
CREATE TABLE BANK
(
    BANK_ID      NUMBER          NOT NULL, 
    BANK_NAME    VARCHAR2(20)    NULL, 
    CONSTRAINT BANK_PK PRIMARY KEY (BANK_ID)
);

CREATE SEQUENCE BANK_SEQ
START WITH 1
INCREMENT BY 1;



-- ALARM_TYPE Table Create SQL
CREATE TABLE ALARM_TYPE
(
    ALARMTYPE_ID    NUMBER          NOT NULL, 
    AL_TYPE         VARCHAR2(50)    NULL, 
    CONSTRAINT ALARM_TYPE_PK PRIMARY KEY (ALARMTYPE_ID)
);

CREATE SEQUENCE ALARM_TYPE_SEQ
START WITH 1
INCREMENT BY 1;



-- LANGGRADE Table Create SQL
CREATE TABLE LANGGRADE
(
    LANG_GRADE_ID    NUMBER          NOT NULL, 
    LANG_GRADE       VARCHAR2(20)    NULL, 
    CONSTRAINT LANGGRADE_PK PRIMARY KEY (LANG_GRADE_ID)
);

CREATE SEQUENCE LANGGRADE_SEQ
START WITH 1
INCREMENT BY 1;



-- WEEK Table Create SQL
CREATE TABLE WEEK
(
    WEEK_NAME_ID    NUMBER    NOT NULL, 
    WEEK_NAME       VARCHAR2(20)    NULL, 
    CONSTRAINT WEEK_PK PRIMARY KEY (WEEK_NAME_ID)
);

CREATE SEQUENCE WEEK_SEQ
START WITH 1
INCREMENT BY 1;



-- LINK_CAT Table Create SQL
CREATE TABLE LINK_CAT
(
    LINK_CAT_ID    NUMBER          NOT NULL, 
    LINK_CAT       VARCHAR2(50)    NULL, 
    CONSTRAINT LINK_CAT_PK PRIMARY KEY (LINK_CAT_ID)
);

CREATE SEQUENCE LINK_CAT_SEQ
START WITH 1
INCREMENT BY 1;



-- TUTORING_LIKE Table Create SQL
CREATE TABLE TUTORING_LIKE
(
    LIKE_ID              NUMBER    NOT NULL, 
    MEMBER_ID            NUMBER    NULL, 
    TUTORING_TUTOR_ID    NUMBER    NULL, 
    LIKE_DATE            DATE DEFAULT SYSDATE      NULL, 
    CONSTRAINT TUTORING_LIKE_PK PRIMARY KEY (LIKE_ID)
);

CREATE SEQUENCE TUTORING_LIKE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_LIKE
    ADD CONSTRAINT FK_TUTORING_LIKE_MEMBER_ID_TUT FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTORING_LIKE
    ADD CONSTRAINT FK_TUTORING_LIKE_TUTORING_TUTO FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);


-- TUTOR_FAQ_REP Table Create SQL
CREATE TABLE TUTOR_FAQ_REP
(
    TUTOR_FAQ_REP_ID    NUMBER            NOT NULL, 
    REP_ID              NUMBER            NULL, 
    REP_DATE            DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID           NUMBER            NULL, 
    FAQ_ID              NUMBER            NULL, 
    REP_COMMENT        VARCHAR2(1000)    NULL, 
    CONSTRAINT TUTOR_FAQ_REP_PK PRIMARY KEY (TUTOR_FAQ_REP_ID)
);

CREATE SEQUENCE TUTOR_FAQ_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_FAQ_REP
    ADD CONSTRAINT FK_TUTOR_FAQ_REP_MEMBER_ID_TUT FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTOR_FAQ_REP
    ADD CONSTRAINT FK_TUTOR_FAQ_REP_FAQ_ID_TUTOR_ FOREIGN KEY (FAQ_ID)
        REFERENCES TUTOR_FAQ (FAQ_ID);

ALTER TABLE TUTOR_FAQ_REP
    ADD CONSTRAINT FK_TUTOR_FAQ_REP_REP_ID_REP_CA FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);


-- TUTOR_NEEDTECH Table Create SQL
CREATE TABLE TUTOR_NEEDTECH
(
    NEEDTECH_ID          NUMBER    NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER    NULL, 
    INTEREST_ID          NUMBER    NULL, 
    LEVEL_ID             NUMBER    NULL, 
    CONSTRAINT TUTOR_NEEDTECH_PK PRIMARY KEY (NEEDTECH_ID)
);

CREATE SEQUENCE TUTOR_NEEDTECH_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_NEEDTECH
    ADD CONSTRAINT FK_TUTOR_NEEDTECH_TUTORING_TUT FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);

ALTER TABLE TUTOR_NEEDTECH
    ADD CONSTRAINT FK_TUTOR_NEEDTECH_INTEREST_ID_ FOREIGN KEY (INTEREST_ID)
        REFERENCES INTEREST (INTEREST_ID);

ALTER TABLE TUTOR_NEEDTECH
    ADD CONSTRAINT FK_TUTOR_NEEDTECH_LEVEL_ID_TEC FOREIGN KEY (LEVEL_ID)
        REFERENCES TECH_LEVEL (LEVEL_ID);


-- TUTEE_NEEDTHCH Table Create SQL
CREATE TABLE TUTEE_NEEDTHCH
(
    NEEDTECH_ID          NUMBER    NOT NULL, 
    TUTORING_TUTEE_ID    NUMBER    NULL, 
    INTEREST_ID          NUMBER    NULL, 
    LEVEL_ID             NUMBER    NULL, 
    CONSTRAINT TUTEE_NEEDTHCH_PK PRIMARY KEY (NEEDTECH_ID)
);

CREATE SEQUENCE TUTEE_NEEDTHCH_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTEE_NEEDTHCH
    ADD CONSTRAINT FK_TUTEE_NEEDTHCH_TUTORING_TUT FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTEE_NEEDTHCH
    ADD CONSTRAINT FK_TUTEE_NEEDTHCH_INTEREST_ID_ FOREIGN KEY (INTEREST_ID)
        REFERENCES INTEREST (INTEREST_ID);

ALTER TABLE TUTEE_NEEDTHCH
    ADD CONSTRAINT FK_TUTEE_NEEDTHCH_LEVEL_ID_TEC FOREIGN KEY (LEVEL_ID)
        REFERENCES TECH_LEVEL (LEVEL_ID);


-- TUTORING_RESERVATION Table Create SQL
CREATE TABLE TUTORING_RESERVATION
(
    RESERVATION_ID       NUMBER    NOT NULL, 
    TUTORING_TUTEE_ID    NUMBER    NULL, 
    MEMBER_ID            NUMBER    NULL, 
    RESERVATION_DATE     DATE DEFAULT SYSDATE      NULL, 
    CONSTRAINT TUTORING_RESERVATION_PK PRIMARY KEY (RESERVATION_ID)
);

CREATE SEQUENCE TUTORING_RESERVATION_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_RESERVATION
    ADD CONSTRAINT FK_TUTORING_RESERVATION_TUTORI FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTORING_RESERVATION
    ADD CONSTRAINT FK_TUTORING_RESERVATION_MEMBER FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- TUTOR_INTEREST Table Create SQL
CREATE TABLE TUTOR_INTEREST
(
    TUTOR_INTEREST_ID    NUMBER    NOT NULL, 
    TUTOR_ID             NUMBER    NULL, 
    INTEREST_ID          NUMBER    NULL, 
    LEVEL_ID             NUMBER    NULL, 
    CONSTRAINT TUTOR_INTEREST_PK PRIMARY KEY (TUTOR_INTEREST_ID)
);

CREATE SEQUENCE TUTOR_INTEREST_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_INTEREST
    ADD CONSTRAINT FK_TUTOR_INTEREST_TUTOR_ID_TUT FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);

ALTER TABLE TUTOR_INTEREST
    ADD CONSTRAINT FK_TUTOR_INTEREST_INTEREST_ID_ FOREIGN KEY (INTEREST_ID)
        REFERENCES INTEREST (INTEREST_ID);

ALTER TABLE TUTOR_INTEREST
    ADD CONSTRAINT FK_TUTOR_INTEREST_LEVEL_ID_TEC FOREIGN KEY (LEVEL_ID)
        REFERENCES TECH_LEVEL (LEVEL_ID);


-- TUTOR_CAREER Table Create SQL
CREATE TABLE TUTOR_CAREER
(
    CAREER_ID         NUMBER           NOT NULL, 
    TUTOR_ID          NUMBER           NULL, 
    CAREER_START      DATE             NULL, 
    CAREER_END        DATE             NULL, 
    CAREER_CONTENT    VARCHAR2(100)    NULL, 
    CONSTRAINT TUTOR_CAREER_PK PRIMARY KEY (CAREER_ID)
);


CREATE SEQUENCE TUTOR_CAREER_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_CAREER
    ADD CONSTRAINT FK_TUTOR_CAREER_TUTOR_ID_TUTOR FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);


-- TUTOR_LINK Table Create SQL
CREATE TABLE TUTOR_LINK
(
    LINK_ID        NUMBER            NOT NULL, 
    TUTOR_ID       NUMBER            NULL, 
    LINK_CAT_ID    NUMBER            NULL, 
    LINK_ADDR      VARCHAR2(2000)    NULL, 
    CONSTRAINT TUTOR_LINK_PK PRIMARY KEY (LINK_ID)
);

CREATE SEQUENCE TUTOR_LINK_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_LINK
    ADD CONSTRAINT FK_TUTOR_LINK_TUTOR_ID_TUTOR_I FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);

ALTER TABLE TUTOR_LINK
    ADD CONSTRAINT FK_TUTOR_LINK_LINK_CAT_ID_LINK FOREIGN KEY (LINK_CAT_ID)
        REFERENCES LINK_CAT (LINK_CAT_ID);


-- TUTEE_FAQ_REP Table Create SQL
CREATE TABLE TUTEE_FAQ_REP
(
    TUTEE_FAQ_REP_ID    NUMBER            NOT NULL, 
    REP_ID              NUMBER            NULL, 
    REP_DATE            DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID           NUMBER            NULL, 
    FAQ_ID              NUMBER            NULL, 
    REP_COMMENT         VARCHAR2(1000)    NULL, 
    CONSTRAINT TUTEE_FAQ_REP_PK PRIMARY KEY (TUTEE_FAQ_REP_ID)
);

CREATE SEQUENCE TUTEE_FAQ_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTEE_FAQ_REP
    ADD CONSTRAINT FK_TUTEE_FAQ_REP_REP_ID_REP_CA FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);

ALTER TABLE TUTEE_FAQ_REP
    ADD CONSTRAINT FK_TUTEE_FAQ_REP_MEMBER_ID_TUT FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTEE_FAQ_REP
    ADD CONSTRAINT FK_TUTEE_FAQ_REP_FAQ_ID_TUTEE_ FOREIGN KEY (FAQ_ID)
        REFERENCES TUTEE_FAQ (FAQ_ID);


-- TUTORING_TUTEE_TIME Table Create SQL
CREATE TABLE TUTORING_TUTEE_TIME
(
    TIME_ID              NUMBER    NOT NULL, 
    TUTORING_TUTEE_ID    NUMBER    NULL, 
    TIME_CAT_ID          NUMBER    NULL, 
    CONSTRAINT TUTORING_TUTEE_TIME_PK PRIMARY KEY (TIME_ID)
);

CREATE SEQUENCE TUTORING_TUTEE_TIME_SEQ
START WITH 1
INCREMENT BY 1;


ALTER TABLE TUTORING_TUTEE_TIME
    ADD CONSTRAINT FK_TUTORING_TUTEE_TIME_TUTORIN FOREIGN KEY (TUTORING_TUTEE_ID)
        REFERENCES TUTORING_TUTEE (TUTORING_TUTEE_ID);

ALTER TABLE TUTORING_TUTEE_TIME
    ADD CONSTRAINT FK_TUTORING_TUTEE_TIME_TIME_CA FOREIGN KEY (TIME_CAT_ID)
        REFERENCES TIME_DIVISION (TIME_CAT_ID);


-- TTBOARD_FILE Table Create SQL
CREATE TABLE TTBOARD_FILE
(
    TT_FILE_ID       NUMBER            NOT NULL, 
    PATH_UPDATE      VARCHAR2(1000)    NULL, 
    PATH_ORIGINAL    VARCHAR2(1000)    NULL, 
    UPLOAD_DATE      DATE DEFAULT SYSDATE              NULL, 
    DELCHECK         VARCHAR2(10)      NULL, 
    TT_ID            NUMBER            NULL, 
    FILE_SIZE        VARCHAR2(30)      NULL, 
    CONSTRAINT TTBOARD_FILE_PK PRIMARY KEY (TT_FILE_ID)
);

CREATE SEQUENCE TTBOARD_FILE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTBOARD_FILE
    ADD CONSTRAINT FK_TTBOARD_FILE_TT_ID_TTBOARD_ FOREIGN KEY (TT_ID)
        REFERENCES TTBOARD (TT_ID);


-- TUTORING_SCHEDULE Table Create SQL
CREATE TABLE TUTORING_SCHEDULE
(
    SCH_ID               NUMBER           NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER           NULL, 
    SCH_TAKE             VARCHAR2(10)     NULL, 
    WRITEDATE            DATE DEFAULT SYSDATE             NULL, 
    SCH_LOCATION         VARCHAR2(100)    NULL, 
    SCH_LAT              NUMBER           NULL, 
    SCH_LONG             NUMBER           NULL, 
    SCH_DATE             DATE             NULL, 
    CONSTRAINT TUTORING_SCHEDULE_P PRIMARY KEY (SCH_ID)
);



CREATE SEQUENCE TUTORING_SCHEDULE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_SCHEDULE
    ADD CONSTRAINT FK_TUTORING_SCHEDULE_TUTORING_ FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);


-- TUTORING_DROP Table Create SQL
CREATE TABLE TUTORING_DROP
(
    DROP_ID          NUMBER           NOT NULL, 
    ENROLL_ID        NUMBER           NULL, 
    REQUEST_ID       NUMBER           NULL, 
    TARGET_ID        NUMBER           NULL, 
    ACCOUNT_NUM      VARCHAR2(100)    NULL, 
    REFUND_COST      VARCHAR2(200)    NULL, 
    APPROVAL_DATE    DATE             NULL, 
    ACCOUNT_NAME     VARCHAR2(50)     NULL, 
    BANK_ID          NUMBER           NULL, 
    DROP_DATE        DATE DEFAULT SYSDATE            NULL, 
    CONSTRAINT TUTORING_DROP_PK PRIMARY KEY (DROP_ID)
);

CREATE SEQUENCE TUTORING_DROP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_DROP
    ADD CONSTRAINT FK_TUTORING_DROP_ENROLL_ID_TUT FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);

ALTER TABLE TUTORING_DROP
    ADD CONSTRAINT FK_TUTORING_DROP_BANK_ID_BANK_ FOREIGN KEY (BANK_ID)
        REFERENCES BANK (BANK_ID);


-- TUTOR_REVIEW Table Create SQL
CREATE TABLE TUTOR_REVIEW
(
    REVIEW_ID       NUMBER           NULL, 
    ENROLL_ID       NUMBER           NULL, 
    REVIEW_GRADE    VARCHAR2(20)     NULL, 
    CONTENT         VARCHAR2(500)    NULL, 
    WRITEDATE       DATE DEFAULT SYSDATE             NULL, 
    CONSTRAINT TUTOR_REVIEW_PK PRIMARY KEY (REVIEW_ID)
);

CREATE SEQUENCE TUTOR_REVIEW_SEQ
START WITH 1;


ALTER TABLE TUTOR_REVIEW
    ADD CONSTRAINT FK_TUTOR_REVIEW_ENROLL_ID_TUTO FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);


-- FAQ Table Create SQL
CREATE TABLE FAQ
(
    FAQ_ID               NUMBER           NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER           NULL, 
    FAQ_QUESTION         VARCHAR2(500)    NULL, 
    FAQ_ANSWER           VARCHAR2(500)    NULL, 
    CONSTRAINT FAQ_PK PRIMARY KEY (FAQ_ID)
);

CREATE SEQUENCE FAQ_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE FAQ
    ADD CONSTRAINT FK_FAQ_TUTORING_TUTOR_ID_TUTOR FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);


-- TUTOR_QNA Table Create SQL
CREATE TABLE TUTOR_QNA
(
    TUTOR_QNA_ID    NUMBER           NOT NULL, 
    TUTOR_ID        NUMBER           NULL, 
    QNA_QUESTION    VARCHAR2(500)    NULL, 
    QNA_ANSWER      VARCHAR2(500)    NULL, 
    CONSTRAINT TUTOR_QNA_PK PRIMARY KEY (TUTOR_QNA_ID)
);

CREATE SEQUENCE TUTOR_QNA_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTOR_QNA
    ADD CONSTRAINT FK_TUTOR_QNA_TUTOR_ID_TUTOR_IN FOREIGN KEY (TUTOR_ID)
        REFERENCES TUTOR_INFO (TUTOR_ID);


-- QTBOARD_TEMP Table Create SQL
CREATE TABLE QTBOARD_TEMP
(
    TEMP_ID      NUMBER           NOT NULL, 
    MEMBER_ID    NUMBER           NULL, 
    TITLE        VARCHAR2(100)    NULL, 
    CONTENT      CLOB             NULL, 
    CONSTRAINT QTBOARD_TEMP_PK PRIMARY KEY (TEMP_ID)
);

CREATE SEQUENCE QTBOARD_TEMP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD_TEMP
    ADD CONSTRAINT FK_QTBOARD_TEMP_MEMBER_ID_TUTE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- QTBOARD_FILE Table Create SQL
CREATE TABLE QTBOARD_FILE
(
    QT_FILE_ID     NUMBER            NOT NULL, 
    QT_ID          NUMBER            NULL, 
    PATH_UPDATE    VARCHAR2(1000)    NULL, 
    PATH_ORIGN     VARCHAR2(1000)    NULL, 
    UPLOAD_DATE    DATE DEFAULT SYSDATE              NULL, 
    STATUS         VARCHAR2(20)      NULL, 
    FILE_SIZE      VARCHAR2(40)      NULL, 
    CONSTRAINT QTBOARD_FILE_PK PRIMARY KEY (QT_FILE_ID)
);

CREATE SEQUENCE QTBOARD_FILE_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD_FILE
    ADD CONSTRAINT FK_QTBOARD_FILE_QT_ID_QTBOARD_ FOREIGN KEY (QT_ID)
        REFERENCES QTBOARD (QT_ID);


-- QTBOARD_POST_REP Table Create SQL
CREATE TABLE QTBOARD_POST_REP
(
    QT_POST_REP_ID    NUMBER            NOT NULL, 
    REP_ID            NUMBER            NULL, 
    REP_DATE          DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID         NUMBER            NULL, 
    QT_ID             NUMBER            NULL, 
    REP_COMMENT       VARCHAR2(1000)    NULL, 
    CONSTRAINT QTBOARD_POST_REP_PK PRIMARY KEY (QT_POST_REP_ID)
);

CREATE SEQUENCE QTBOARD_POST_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD_POST_REP
    ADD CONSTRAINT FK_QTBOARD_POST_REP_REP_ID_REP FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);

ALTER TABLE QTBOARD_POST_REP
    ADD CONSTRAINT FK_QTBOARD_POST_REP_MEMBER_ID_ FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE QTBOARD_POST_REP
    ADD CONSTRAINT FK_QTBOARD_POST_REP_QT_ID_QTBO FOREIGN KEY (QT_ID)
        REFERENCES QTBOARD (QT_ID);


-- QTBOARD_COMM_REP Table Create SQL
CREATE TABLE QTBOARD_COMM_REP
(
    QT_COMM_REP_ID    NUMBER            NOT NULL, 
    REP_ID            NUMBER            NULL, 
    REP_DATE          DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID         NUMBER            NULL, 
    COMM_ID           NUMBER            NULL, 
    REP_COMMENT      VARCHAR2(1000)    NULL, 
    CONSTRAINT QTBOARD_COMM_REP_PK PRIMARY KEY (QT_COMM_REP_ID)
);

CREATE SEQUENCE QTBOARD_COMM_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE QTBOARD_COMM_REP
    ADD CONSTRAINT FK_QTBOARD_COMM_REP_REP_ID_REP FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);

ALTER TABLE QTBOARD_COMM_REP
    ADD CONSTRAINT FK_QTBOARD_COMM_REP_MEMBER_ID_ FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE QTBOARD_COMM_REP
    ADD CONSTRAINT FK_QTBOARD_COMM_REP_COMM_ID_QT FOREIGN KEY (COMM_ID)
        REFERENCES QTBOARD_COMM (COMM_ID);


-- RECOMM_POST Table Create SQL
CREATE TABLE RECOMM_POST
(
    RECOMM_ID      NUMBER    NOT NULL, 
    QT_ID          NUMBER    NULL, 
    MEMBER_ID      NUMBER    NULL, 
    RECOMM_DATE    DATE DEFAULT SYSDATE      NULL, 
    CONSTRAINT RECOMM_POST_PK PRIMARY KEY (RECOMM_ID)
);

CREATE SEQUENCE RECOMM_POST_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE RECOMM_POST
    ADD CONSTRAINT FK_RECOMM_POST_QT_ID_QTBOARD_Q FOREIGN KEY (QT_ID)
        REFERENCES QTBOARD (QT_ID);

ALTER TABLE RECOMM_POST
    ADD CONSTRAINT FK_RECOMM_POST_MEMBER_ID_TUTEE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- RECOMM_COMMENT Table Create SQL
CREATE TABLE RECOMM_COMMENT
(
    RECOMM_ID      NUMBER    NOT NULL, 
    COMM_ID        NUMBER    NULL, 
    MEMBER_ID      NUMBER    NULL, 
    RECOMM_DATE    DATE DEFAULT SYSDATE      NULL, 
    CONSTRAINT RECOMM_COMMENT_PK PRIMARY KEY (RECOMM_ID)
);

CREATE SEQUENCE RECOMM_COMMENT_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE RECOMM_COMMENT
    ADD CONSTRAINT FK_RECOMM_COMMENT_COMM_ID_QTBO FOREIGN KEY (COMM_ID)
        REFERENCES QTBOARD_COMM (COMM_ID);

ALTER TABLE RECOMM_COMMENT
    ADD CONSTRAINT FK_RECOMM_COMMENT_MEMBER_ID_TU FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- ALARM Table Create SQL
CREATE TABLE ALARM
(
    ALARM_ID          NUMBER            NOT NULL, 
    MEMBER_ID         NUMBER            NULL, 
    ALARMTYPE_ID      NUMBER            NULL, 
    ALARMDATE         DATE DEFAULT SYSDATE              NULL, 
    ALARM_CHECK       VARCHAR2(10) DEFAULT '1' NULL, 
    ALARM_LINK        VARCHAR2(1000)    NULL, 
    ALARM_CONTENT    VARCHAR2(100)     NULL, 
    CONSTRAINT ALARM_PK PRIMARY KEY (ALARM_ID)
);

SELECT * FROM ALARM;

CREATE SEQUENCE ALARM_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE ALARM
    ADD CONSTRAINT FK_ALARM_ALARMTYPE_ID_ALARM_TY FOREIGN KEY (ALARMTYPE_ID)
        REFERENCES ALARM_TYPE (ALARMTYPE_ID);

ALTER TABLE ALARM
    ADD CONSTRAINT FK_ALARM_MEMBER_ID_TUTEE_MEMBE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);


-- APPLY_BOARD Table Create SQL
CREATE TABLE APPLY_BOARD
(
    APPLY_BD_ID    NUMBER            NOT NULL, 
    APPLY_ID       NUMBER            NULL, 
    WRITER         VARCHAR2(30)      NULL, 
    CONTENT        VARCHAR2(1000)    NULL, 
    WRITEDATE      DATE DEFAULT SYSDATE              NULL, 
    READCHECK      VARCHAR2(20) DEFAULT '1'      NULL, 
    CONSTRAINT APPLY_BOARD_PK PRIMARY KEY (APPLY_BD_ID)
);

CREATE SEQUENCE APPLY_BOARD_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE APPLY_BOARD
    ADD CONSTRAINT FK_APPLY_BOARD_APPLY_ID_TUTOR_ FOREIGN KEY (APPLY_ID)
        REFERENCES TUTOR_APPLY (APPLY_ID);


-- INVITE_BOARD Table Create SQL
CREATE TABLE INVITE_BOARD
(
    INVITE_BD_ID    NUMBER            NOT NULL, 
    INVITE_ID       NUMBER            NULL, 
    WRITER          VARCHAR2(30)      NULL, 
    CONTENT         VARCHAR2(1000)    NULL, 
    WRITEDATE       DATE DEFAULT SYSDATE              NULL, 
    READCHECK       VARCHAR2(20) DEFAULT '1'      NULL, 
    CONSTRAINT INVITE_BOARD_PK PRIMARY KEY (INVITE_BD_ID)
);

CREATE SEQUENCE INVITE_BOARD_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE INVITE_BOARD
    ADD CONSTRAINT FK_INVITE_BOARD_INVITE_ID_TUTE FOREIGN KEY (INVITE_ID)
        REFERENCES TUTOR_INVITE (INVITE_ID);


-- TUTEE_INTEREST Table Create SQL
CREATE TABLE TUTEE_INTEREST
(
    TUTEE_INTEREST_ID    NUMBER    NOT NULL, 
    MEMBER_ID            NUMBER    NULL, 
    INTEREST_ID          NUMBER    NULL, 
    LEVEL_ID             NUMBER    NULL, 
    CONSTRAINT TUTEE_INTEREST_PK PRIMARY KEY (TUTEE_INTEREST_ID)
);

CREATE SEQUENCE TUTEE_INTEREST_SEQ
START WITH 1
INCREMENT BY 1;


ALTER TABLE TUTEE_INTEREST
    ADD CONSTRAINT FK_TUTEE_INTEREST_MEMBER_ID_TU FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TUTEE_INTEREST
    ADD CONSTRAINT FK_TUTEE_INTEREST_INTEREST_ID_ FOREIGN KEY (INTEREST_ID)
        REFERENCES INTEREST (INTEREST_ID);

ALTER TABLE TUTEE_INTEREST
    ADD CONSTRAINT FK_TUTEE_INTEREST_LEVEL_ID_TEC FOREIGN KEY (LEVEL_ID)
        REFERENCES TECH_LEVEL (LEVEL_ID);


-- TUTEE_REVIEW Table Create SQL
CREATE TABLE TUTEE_REVIEW
(
    REVIEW_ID    NUMBER          NOT NULL, 
    ENROLL_ID    NUMBER          NULL, 
    GRADE        VARCHAR2(20)    NULL, 
    WRITEDATE    DATE DEFAULT SYSDATE            NULL, 
    CONSTRAINT TUTEE_REVIEW_PK PRIMARY KEY (REVIEW_ID)
);

CREATE SEQUENCE TUTEE_REVIEW_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTEE_REVIEW
    ADD CONSTRAINT FK_TUTEE_REVIEW_ENROLL_ID_TUTO FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);


-- ACCOUNT Table Create SQL
CREATE TABLE ACCOUNT
(
    ACCOUNT_ID           NUMBER          NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER          NULL, 
    ACCOUNT_MONEY        VARCHAR2(20)    NULL, 
    ACCOUNT_CHARGE       VARCHAR2(20)    NULL, 
    ACCOUNT_DATE         DATE DEFAULT SYSDATE            NULL, 
    CONSTRAINT ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID)
);

CREATE SEQUENCE ACCOUNT_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE ACCOUNT
    ADD CONSTRAINT FK_ACCOUNT_TUTORING_TUTOR_ID_T FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);


-- SELFTEST Table Create SQL
CREATE TABLE SELFTEST
(
    SELFTEST_ID      NUMBER          NOT NULL, 
    MEMBER_ID        NUMBER          NULL, 
    TEST_LANG        VARCHAR2(30)    NULL, 
    LANG_GRADE_ID    NUMBER          NULL, 
    CONSTRAINT SELFTEST_PK PRIMARY KEY (SELFTEST_ID)
);

CREATE SEQUENCE SELFTEST_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE SELFTEST
    ADD CONSTRAINT FK_SELFTEST_MEMBER_ID_TUTEE_ME FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE SELFTEST
    ADD CONSTRAINT FK_SELFTEST_LANG_GRADE_ID_LANG FOREIGN KEY (LANG_GRADE_ID)
        REFERENCES LANGGRADE (LANG_GRADE_ID);


-- TUTORING_WEEK Table Create SQL
CREATE TABLE TUTORING_WEEK
(
    WEEK_ID              NUMBER    NOT NULL, 
    TUTORING_TUTOR_ID    NUMBER    NULL, 
    WEEK_NAME_ID         NUMBER    NULL, 
    CONSTRAINT TUTORING_WEEK_PK PRIMARY KEY (WEEK_ID)
);

CREATE SEQUENCE TUTORING_WEEK_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TUTORING_WEEK
    ADD CONSTRAINT FK_TUTORING_WEEK_TUTORING_TUTO FOREIGN KEY (TUTORING_TUTOR_ID)
        REFERENCES TUTORING_TUTOR (TUTORING_TUTOR_ID);

ALTER TABLE TUTORING_WEEK
    ADD CONSTRAINT FK_TUTORING_WEEK_WEEK_NAME_ID_ FOREIGN KEY (WEEK_NAME_ID)
        REFERENCES WEEK (WEEK_NAME_ID);


-- TTBOARD_TEMP Table Create SQL
CREATE TABLE TTBOARD_TEMP
(
    TEMP_ID       NUMBER           NOT NULL, 
    TT_TITLE      VARCHAR2(100)    NULL, 
    TT_CONTENT    CLOB             NULL, 
    ENROLL_ID     NUMBER           NULL, 
    CONSTRAINT TTBOARD_TEMP_PK PRIMARY KEY (TEMP_ID)
);

CREATE SEQUENCE TTBOARD_TEMP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTBOARD_TEMP
    ADD CONSTRAINT FK_TTBOARD_TEMP_ENROLL_ID_TUTO FOREIGN KEY (ENROLL_ID)
        REFERENCES TUTORING_ENROLL (ENROLL_ID);


-- TTBOARD_REP Table Create SQL
CREATE TABLE TTBOARD_REP
(
    TTBOARD_REP_ID    NUMBER            NOT NULL, 
    REP_ID            NUMBER            NULL, 
    REP_DATE          DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID         NUMBER            NULL, 
    TT_ID             NUMBER            NULL, 
    REP_COMMENT       VARCHAR2(1000)    NULL, 
    CONSTRAINT TTBOARD_REP_PK PRIMARY KEY (TTBOARD_REP_ID)
);

CREATE SEQUENCE TTBOARD_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTBOARD_REP
    ADD CONSTRAINT FK_TTBOARD_REP_MEMBER_ID_TUTEE FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TTBOARD_REP
    ADD CONSTRAINT FK_TTBOARD_REP_REP_ID_REP_CAT_ FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);

ALTER TABLE TTBOARD_REP
    ADD CONSTRAINT FK_TTBOARD_REP_TT_ID_TTBOARD_T FOREIGN KEY (TT_ID)
        REFERENCES TTBOARD (TT_ID);


-- TTCOMM_REP Table Create SQL
CREATE TABLE TTCOMM_REP
(
    COMM_REP_ID    NUMBER            NOT NULL, 
    REP_ID         NUMBER            NULL, 
    REP_DATE       DATE DEFAULT SYSDATE              NULL, 
    MEMBER_ID      NUMBER            NULL, 
    COMM_ID        NUMBER            NULL, 
    REP_CONTENT    VARCHAR2(1000)    NULL, 
    CONSTRAINT TTCOMM_REP_PK PRIMARY KEY (COMM_REP_ID)
);

CREATE SEQUENCE TTCOMM_REP_SEQ
START WITH 1
INCREMENT BY 1;



ALTER TABLE TTCOMM_REP
    ADD CONSTRAINT FK_TTCOMM_REP_REP_ID_REP_CAT_R FOREIGN KEY (REP_ID)
        REFERENCES REP_CAT (REP_ID);

ALTER TABLE TTCOMM_REP
    ADD CONSTRAINT FK_TTCOMM_REP_MEMBER_ID_TUTEE_ FOREIGN KEY (MEMBER_ID)
        REFERENCES TUTEE (MEMBER_ID);

ALTER TABLE TTCOMM_REP
    ADD CONSTRAINT FK_TTCOMM_REP_COMM_ID_TTBOARD_ FOREIGN KEY (COMM_ID)
        REFERENCES TTBOARD_COMM (TT_COMM_ID);

--------------------------------------------------------------------------------------------------------

CREATE OR REPLACE VIEW QTBOARD_COMM_VIEW
AS
SELECT ROWNUM AS "ROWNUM",
        QC.COMM_ID,
        T.MEMBER_ID,
        T.NICKNAME,
        QC.QT_ID,
        QC.PAR_COMM_ID,
        TP.NICKNAME AS PAR_NICKNAME,
        QC.COMM_DEPT,
        QC.CONTENT,
        CASE WHEN TO_CHAR(QC.WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QC.WRITEDATE, 'HH24:MI')  
            ELSE TO_CHAR(QC.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE,
        (SELECT COUNT(*) FROM RECOMM_COMMENT WHERE COMM_ID = QC.COMM_ID) AS RECOMM,
        (SELECT COUNT(*) FROM QTBOARD_COMM_REP WHERE COMM_ID = QC.COMM_ID) AS REP,
        (SELECT COUNT(*) FROM QTBOARD_COMM WHERE PAR_COMM_ID = QC.COMM_ID) AS PARCHECK,
        QC.DELCHECK,
        T.PROF_PATH
FROM QTBOARD_COMM QC, TUTEE T, QTBOARD_COMM QCP, TUTEE TP
WHERE QC.MEMBER_ID = T.MEMBER_ID
AND QC.PAR_COMM_ID = QCP.COMM_ID(+)
AND QCP.MEMBER_ID = TP.MEMBER_ID(+)
START WITH QC.PAR_COMM_ID IS NULL
CONNECT BY PRIOR QC.COMM_ID = QC.PAR_COMM_ID;


SELECT * FROM TUTORING_TUTOR;

SELECT * FROM TUTEE;

COMMIT;

DESC TUTORING_TUTEE;

SELECT * FROM MACH_LV;

commit;

SELECT * FROM TUTORING_TUTEE;

SELECT * FROM INTEREST;

SELECT * FROM TUTOR_INVITE;

SELECT * FROM TUTEE;

SELECT * FROM TUTORING_TUTEE_TIME;

SELECT * FROM REGION;

SELECT * FROM TUTOR_INFO;

COMMIT;


SELECT * FROM TIME_DIVISION;








CREATE OR REPLACE VIEW QTBOARDVIEW	
AS
SELECT QB.QT_ID, PH.HEAD_NAME, QB.TITLE, T.NICKNAME
     , (SELECT COUNT(*) FROM RECOMM_POST WHERE QT_ID = QB.QT_ID) AS RECOMM 
     , HITCOUNT
     , CASE WHEN TO_CHAR(WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QB.WRITEDATE, 'HH24:MI')  
            ELSE TO_CHAR(QB.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE          
    , QB.CONTENT
    , (SELECT COUNT(*) FROM QTBOARD_POST_REP WHERE QT_ID = QB.QT_ID) AS REP
FROM QTBOARD QB, TUTEE T, POST_HEAD PH
WHERE QB.HEAD_ID = PH.HEAD_ID
  AND QB.MEMBER_ID = T.MEMBER_ID
ORDER BY QT_ID DESC;


CREATE OR REPLACE VIEW QTBOARD_VIEW	
AS
SELECT QB.QT_ID, PH.HEAD_NAME, QB.TITLE, T.NICKNAME
     , (SELECT COUNT(*) FROM RECOMM_POST WHERE QT_ID = QB.QT_ID) AS RECOMM 
     , HITCOUNT
     , CASE WHEN TO_CHAR(WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QB.WRITEDATE, 'HH24:MI')
            WHEN TO_CHAR(WRITEDATE,'YYYY') = TO_CHAR(SYSDATE,'YYYY')
            THEN TO_CHAR(QB.WRITEDATE, 'MM-DD')
            ELSE TO_CHAR(QB.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE          
    , QB.CONTENT
    , (SELECT COUNT(*) FROM QTBOARD_POST_REP WHERE QT_ID = QB.QT_ID) AS REP
    , CASE WHEN TO_CHAR(WRITEDATE,'YYYY-MM-DD HH24:MI:SS') > TO_CHAR(SYSDATE-1,'YYYY-MM-DD HH24:MI:SS')
      THEN '1'
      ELSE '0'
      END NEW
    ,T.PROF_PATH
    , (SELECT COUNT(*) FROM QTBOARD_COMM WHERE QT_ID = QB.QT_ID) AS COMM
FROM QTBOARD QB, TUTEE T, POST_HEAD PH
WHERE QB.HEAD_ID = PH.HEAD_ID
  AND QB.MEMBER_ID = T.MEMBER_ID
ORDER BY QT_ID DESC;



CREATE OR REPLACE VIEW QTBOARD_COMM_VIEW
AS
SELECT ROWNUM AS "ROWNUM",
        QC.COMM_ID,
        T.MEMBER_ID,
        T.NICKNAME,
        QC.QT_ID,
        QC.PAR_COMM_ID,
        TP.NICKNAME AS PAR_NICKNAME,
        QC.COMM_DEPT,
        QC.CONTENT,
        CASE WHEN TO_CHAR(QC.WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QC.WRITEDATE, 'HH24:MI')  
            ELSE TO_CHAR(QC.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE,
        (SELECT COUNT(*) FROM RECOMM_COMMENT WHERE COMM_ID = QC.COMM_ID) AS RECOMM,
        (SELECT COUNT(*) FROM QTBOARD_COMM_REP WHERE COMM_ID = QC.COMM_ID) AS REP,
        (SELECT COUNT(*) FROM QTBOARD_COMM WHERE PAR_COMM_ID = QC.COMM_ID) AS PARCHECK,
        QC.DELCHECK
FROM QTBOARD_COMM QC, TUTEE T, QTBOARD_COMM QCP, TUTEE TP
WHERE QC.MEMBER_ID = T.MEMBER_ID
AND QC.PAR_COMM_ID = QCP.COMM_ID(+)
AND QCP.MEMBER_ID = TP.MEMBER_ID(+)
START WITH QC.PAR_COMM_ID IS NULL
CONNECT BY PRIOR QC.COMM_ID = QC.PAR_COMM_ID;

CREATE OR REPLACE VIEW LATESTREVIEW
AS
SELECT TUTORING_TUTOR.TUTOR_ID, TUTEE.PROF_PATH, TUTEE.NICKNAME, TUTOR_REVIEW.WRITEDATE, TUTOR_REVIEW.CONTENT, TUTOR_REVIEW.REVIEW_GRADE
FROM TUTOR_INFO LEFT JOIN TUTORING_TUTOR    ON TUTOR_INFO.TUTOR_ID=TUTORING_TUTOR.TUTOR_ID
                LEFT JOIN TUTORING_ENROLL   ON TUTORING_TUTOR.TUTORING_TUTOR_ID=TUTORING_ENROLL.TUTORING_TUTOR_ID
                JOIN TUTOR_REVIEW      ON TUTOR_REVIEW.ENROLL_ID=TUTORING_ENROLL.ENROLL_ID
                LEFT JOIN TUTEE             ON TUTEE.MEMBER_ID=TUTORING_ENROLL.MEMBER_ID;
                
                
CREATE OR REPLACE VIEW LOGINVIEW
AS
SELECT TT.MEMBER_ID, TT.NICKNAME, TT.LOGIN_MAIL,TT.PASSWORD, TT.PROF_PATH, TI.TUTOR_ID, TUTOR_NAME, TELEPHONE
FROM TUTEE TT , TUTOR_INFO TI
WHERE TT.MEMBER_ID = TI.MEMBER_ID(+);



CREATE OR REPLACE VIEW TUTEE_INTEREST_VIEW
AS
SELECT
 MEMBER_ID,
 SUBSTR(XMLAGG(XMLELEMENT(A,','||INTEREST_ID) ORDER BY INTEREST_ID).EXTRACT('//text()'), 2) INTEREST_ID
 FROM TUTEE_INTEREST
 WHERE LEVEL_ID IS NOT NULL
 GROUP BY MEMBER_ID;
 
 
CREATE OR REPLACE VIEW TUTEE_LEVEL_VIEW
AS
SELECT
 MEMBER_ID,
 SUBSTR(XMLAGG(XMLELEMENT(A,','||LEVEL_ID) ORDER BY LEVEL_ID).EXTRACT('//text()'), 2) LEVEL_ID
 FROM TUTEE_INTEREST
 WHERE LEVEL_ID IS NOT NULL
 GROUP BY MEMBER_ID;
 
 
CREATE OR REPLACE VIEW TUTORING_TUTOR_VIEW	
AS
SELECT TUTORING_TUTOR_ID,TITLE,MIN_NUM,MAX_NUM,START_DATE,ENTRY_COST,THUMBNAIL_PATH,REG_ID,REG_NAME  
    , CASE WHEN (SELECT COUNT(*) FROM TUTORING_WEEK W WHERE W.TUTORING_TUTOR_ID = T.TUTORING_TUTOR_ID) > 0
  THEN  CEIL(T.ENTIRE_PERIOD/(SELECT COUNT(*) FROM TUTORING_WEEK W WHERE W.TUTORING_TUTOR_ID = T.TUTORING_TUTOR_ID)) ELSE 0 END AS WEEK

  ,(SELECT PROF_PATH
FROM TUTEE WHERE MEMBER_ID = (SELECT MEMBER_ID FROM TUTOR_INFO WHERE TUTOR_ID=T.TUTOR_ID)) AS PROF_PATH,INTEREST_ID,LEVEL_ID,START_TIME,END_TIME,ENTIRE_PERIOD,TUTOR_ID
FROM
(
SELECT T.TUTORING_TUTOR_ID,T.TUTOR_ID,T.TITLE,T.MIN_NUM,T.MAX_NUM,T.START_DATE,T.ENTRY_COST,T.THUMBNAIL_PATH,R.REG_ID,R.REG_NAME,P.PROGRESS_NAME,T.ENTIRE_PERIOD,A.INTEREST_ID,A.LEVEL_ID,START_TIME,END_TIME
FROM TUTORING_TUTOR T LEFT JOIN REGION R
ON T.REG_ID = R.REG_ID LEFT JOIN PROGRESS_LV P
                             ON T.PROGRESS_ID = P.PROGRESS_ID LEFT JOIN (SELECT
                                                                          TUTORING_TUTOR_ID,
                                                                          SUBSTR(XMLAGG(XMLELEMENT(A,','||INTEREST_ID) ORDER BY INTEREST_ID).EXTRACT('//text()'), 2) INTEREST_ID
                                                                          ,SUBSTR(XMLAGG(XMLELEMENT(A,','||LEVEL_ID) ORDER BY LEVEL_ID).EXTRACT('//text()'), 2) LEVEL_ID
                                                                        FROM TUTOR_NEEDTECH
                                                                        WHERE LEVEL_ID IS NOT NULL
                                                                        GROUP BY TUTORING_TUTOR_ID)A
                                                                         ON T.TUTORING_TUTOR_ID = A.TUTORING_TUTOR_ID

)T;


CREATE OR REPLACE VIEW TUTORING_TUTEE_VIEW	
AS
SELECT T.TUTORING_TUTEE_ID
       ,TUTORING_TITLE
       ,MEMBER_ID
       ,INTRO
       ,ENTIRE_PERIOD
       ,MIN_NUM
       ,MAX_NUM
       ,REG_ID
       ,(SELECT REG_NAME FROM REGION WHERE REG_ID =T.REG_ID )AS REG_NAME
       ,(SELECT REG_LONG FROM REGION WHERE REG_ID =T.REG_ID )AS REG_LONG
       ,(SELECT REG_LAT FROM REGION WHERE REG_ID =T.REG_ID ) AS REG_LAT
       ,ENTRY_COST
       ,DEADLINE
       ,TCOMMENT
       ,UPLOAD_DATE
       ,A.INTEREST_ID
       ,A.LEVEL_ID
FROM TUTORING_TUTEE T LEFT JOIN (SELECT
                              TUTORING_TUTEE_ID
                              ,SUBSTR(XMLAGG(XMLELEMENT(A,','||INTEREST_ID) ORDER BY INTEREST_ID).EXTRACT('//text()'), 2) INTEREST_ID
                              ,SUBSTR(XMLAGG(XMLELEMENT(A,','||LEVEL_ID) ORDER BY LEVEL_ID).EXTRACT('//text()'), 2) LEVEL_ID
                            FROM TUTEE_NEEDTHCH
                            WHERE LEVEL_ID IS NOT NULL
                            GROUP BY TUTORING_TUTEE_ID
                            ) A
ON T.TUTORING_TUTEE_ID = A.TUTORING_TUTEE_ID;


CREATE OR REPLACE VIEW QTBOARD_BEST_VIEW
AS
SELECT  QB.QT_ID, PH.HEAD_NAME, QB.TITLE, T.NICKNAME
     , (SELECT COUNT(*) FROM RECOMM_POST WHERE QT_ID = QB.QT_ID) AS RECOMM 
     , HITCOUNT
     , CASE WHEN TO_CHAR(WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QB.WRITEDATE, 'HH24:MI')
            WHEN TO_CHAR(WRITEDATE,'YYYY') = TO_CHAR(SYSDATE,'YYYY')
            THEN TO_CHAR(QB.WRITEDATE, 'MM-DD')
            ELSE TO_CHAR(QB.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE
    , (SELECT COUNT(*) FROM QTBOARD_POST_REP WHERE QT_ID = QB.QT_ID) AS REP
FROM QTBOARD QB, TUTEE T, POST_HEAD PH
WHERE QB.HEAD_ID = PH.HEAD_ID
  AND QB.MEMBER_ID = T.MEMBER_ID
  AND QB.WRITEDATE > SYSDATE-7
ORDER BY RECOMM DESC;



CREATE OR REPLACE VIEW QTBOARD_HIT_VIEW
AS
SELECT  QB.QT_ID, PH.HEAD_NAME, QB.TITLE, T.NICKNAME
     , (SELECT COUNT(*) FROM RECOMM_POST WHERE QT_ID = QB.QT_ID) AS RECOMM 
     , HITCOUNT
     , CASE WHEN TO_CHAR(WRITEDATE,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
            THEN TO_CHAR(QB.WRITEDATE, 'HH24:MI')
            WHEN TO_CHAR(WRITEDATE,'YYYY') = TO_CHAR(SYSDATE,'YYYY')
            THEN TO_CHAR(QB.WRITEDATE, 'MM-DD')
            ELSE TO_CHAR(QB.WRITEDATE, 'YYYY-MM-DD')
            END WRITEDATE
    , (SELECT COUNT(*) FROM QTBOARD_POST_REP WHERE QT_ID = QB.QT_ID) AS REP
FROM QTBOARD QB, TUTEE T, POST_HEAD PH
WHERE QB.HEAD_ID = PH.HEAD_ID
  AND QB.MEMBER_ID = T.MEMBER_ID
  AND QB.WRITEDATE > SYSDATE-7
ORDER BY HITCOUNT DESC;


CREATE OR REPLACE VIEW TUTOR_REVIEW_VIEW	
AS
SELECT 
        REVIEW_ID
        ,TUTORING_TUTOR_ID
        ,REVIEW_GRADE
        ,NICKNAME
        ,WRITEDATE
        ,CONTENT
        ,PROF_PATH
FROM
(SELECT *
FROM TUTOR_REVIEW
WHERE ENROLL_ID IN (SELECT ENROLL_ID
           FROM TUTORING_ENROLL                                                                                           
           WHERE  TUTORING_TUTOR_ID  IN  (SELECT TUTORING_TUTOR_ID
                                            FROM TUTORING_TUTOR
                                            WHERE TUTOR_ID = 1)
                                            )ORDER BY REVIEW_ID DESC)   A JOIN (SELECT TE.ENROLL_ID,T.MEMBER_ID,TUTORING_TUTOR_ID,NICKNAME,T.PROF_PATH
                                                                              FROM TUTORING_ENROLL TE JOIN TUTEE T
                                                                             ON TE.MEMBER_ID = T.MEMBER_ID) B
                                                                             ON A.ENROLL_ID = B.ENROLL_ID AND ROWNUM<=3;
                                                                             
                                                                             
                                                                             
                                                                             
CREATE OR REPLACE VIEW TUTOR_INTEREST_VIEW	
AS
SELECT
		  TUTOR_ID,
		  SUBSTR(XMLAGG(XMLELEMENT(A,','||INTEREST_ID) ORDER BY INTEREST_ID).EXTRACT('//text()'), 2) INTEREST_ID
		  ,SUBSTR(XMLAGG(XMLELEMENT(A,','||LEVEL_ID) ORDER BY LEVEL_ID).EXTRACT('//text()'), 2) LEVEL_ID
		FROM TUTOR_INTEREST
		WHERE LEVEL_ID IS NOT NULL
		GROUP BY TUTOR_ID;
        
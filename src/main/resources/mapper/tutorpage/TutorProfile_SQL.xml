<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="tutorprofile"> 
	
	<!-- 튜터 프로필사진, 이름, 소개, 핸드폰번호 조회 -->
	<select id="info" parameterType="hashmap" resultType="hashmap">
		SELECT 
			T.PROF_PATH
			, F.TUTOR_NAME
			, F.INTRO
			, T.PHONENUM
		FROM TUTOR_INFO F, TUTEE T
		WHERE 
			T.MEMBER_ID = #{MEMBER_ID}
		  AND 
		  	F.MEMBER_ID = T.MEMBER_ID
	</select>
	
	<!-- 튜터 관심사(언어) 및 레벨 조회(다중값) -->
	<select id="interest" parameterType="hashmap" resultType="hashmap">
		SELECT 
			I.TUTOR_ID
			, R.INTEREST_CAT
			, L.LEVEL_NAME
			, I.TUTOR_INTEREST_ID
			, L.LEVEL_ID
			, R.INTEREST_ID
		FROM 
			TUTOR_INTEREST I
			, INTEREST R
			, TECH_LEVEL L
			, TUTOR_INFO F
		WHERE 
			F.TUTOR_ID = #{TUTOR_ID}
		  AND 
		  	F.TUTOR_ID = I.TUTOR_ID
		  AND 
		  	I.INTEREST_ID = R.INTEREST_ID
		  AND 
		  	I.LEVEL_ID = L.LEVEL_ID

	</select>
	
	<!-- 튜터 경력 조회 (다중값) -->
	<select id="career" parameterType="hashmap" resultType="hashmap">
		
		<![CDATA[ 
		SELECT 
			F.TUTOR_ID
			, TO_CHAR(C.CAREER_START, 'YYYY-MM-DD') AS CAREER_START
			, TO_CHAR(C.CAREER_END, 'YYYY-MM-DD') AS CAREER_END
			, C.CAREER_CONTENT
			, C.CAREER_ID
		FROM 
			TUTOR_CAREER C
			, TUTOR_INFO F
		WHERE 
			F.TUTOR_ID = #{TUTOR_ID}
		  AND 
		  	F.TUTOR_ID = C.TUTOR_ID
	   ORDER BY C.CAREER_START
		  	
		]]>
	</select>
	
	
	<!-- 튜터 경력 개수 조회 (다중값) -->
	<select id="careerCount" parameterType="hashmap" resultType="Integer">
		SELECT 
			COUNT(*) AS COUNT
		FROM 
			(  SELECT 
					F.TUTOR_ID
					, C.CAREER_START
					, C.CAREER_END
					, C.CAREER_CONTENT
					, C.CAREER_ID
	    	   FROM 
	    	   		TUTOR_CAREER C
	    	   		, TUTOR_INFO F
	    	   WHERE 
	    	   		F.TUTOR_ID = #{TUTOR_ID}
	          	 AND 
	          		F.TUTOR_ID = C.TUTOR_ID
	        )
	</select>	
	
	
	<!-- 튜터 관심사(카테고리) 조회 (다중값) -->
	<select id="category" parameterType="hashmap" resultType="hashmap">
		SELECT 
			I.TUTOR_ID
			, R.INTEREST_ID
			, R.INTEREST_CAT
		FROM 
			TUTOR_INTEREST I
			, INTEREST R
			, TUTOR_INFO F
		WHERE 
			F.TUTOR_ID = #{TUTOR_ID}
		  AND 
		  	F.TUTOR_ID = I.TUTOR_ID
		  AND 
		  	I.INTEREST_ID = R.INTEREST_ID
		  AND 
		  	I.LEVEL_ID IS NULL
	</select>
	
	<!-- 튜터 링크 조회 (다중값) -->
	<select id="link" parameterType="hashmap" resultType="hashmap">
		SELECT 
			L.LINK_ADDR
			, C.LINK_CAT
			, C.LINK_CAT_ID
		FROM 
			TUTOR_LINK L
			, TUTOR_INFO F
			, LINK_CAT C
		WHERE 
			F.TUTOR_ID = #{TUTOR_ID}
		  AND 
		  	F.TUTOR_ID = L.TUTOR_ID
		  AND 
		  	L.LINK_CAT_ID = C.LINK_CAT_ID
	</select>	
	
	<!-- 튜터 링크 개수 조회 -->
	<select id="linkCount" parameterType="hashmap" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM 
			TUTOR_LINK
		WHERE 
			TUTOR_ID = #{TUTOR_ID}
	</select>
	
	

	<!-- 튜터 관심사(언어) 및 레벨 삭제 -->
	<delete id="interestDelete" parameterType="hashmap">
		DELETE
		FROM 
			TUTOR_INTEREST
		WHERE 
		    TUTOR_ID = #{TUTOR_ID}
		  AND 
		    LEVEL_ID IS NOT NULL
	</delete>
	
	<!-- 튜터 관심사(언어) 및 레벨 등록 -->
	<insert id="interestInsert" parameterType="hashmap">
		INSERT 
			INTO 
				TUTOR_INTEREST
					(TUTOR_INTEREST_ID
					, TUTOR_ID
					, INTEREST_ID
					, LEVEL_ID)
				VALUES
					(TUTOR_INTEREST_SEQ.NEXTVAL
					, #{TUTOR_ID}
					, #{INTEREST_ID}
					, #{LEVEL_ID})
	</insert>
	
	
	<!-- 튜터 카테고리 삭제 -->
	<delete id="categoryDelete" parameterType="hashmap">
		DELETE
		FROM 
			TUTOR_INTEREST
		WHERE 
		    TUTOR_ID = #{TUTOR_ID}
		  AND 
		    LEVEL_ID IS NULL
	</delete>
	
	
	<!-- 튜터 카테고리 입력 -->
	<insert id="categoryInsert" parameterType="hashmap">
		INSERT 
			INTO 
				TUTOR_INTEREST
					(TUTOR_INTEREST_ID
					, TUTOR_ID
					, INTEREST_ID)
			VALUES
				(TUTOR_INTEREST_SEQ.NEXTVAL
				, #{TUTOR_ID}
				, #{INTEREST_ID})
	</insert>
	
	
	<!-- 튜터 경력 삭제 -->
	<delete id="careerDelete" parameterType="hashmap">
		DELETE
		FROM 
			TUTOR_CAREER
		WHERE 
			TUTOR_ID = #{TUTOR_ID}
	</delete>
	
	<!-- 튜터 경력 입력 -->
	<insert id="careerInsert" parameterType="hashmap">
		INSERT 
			INTO
				TUTOR_CAREER
					(CAREER_ID
					, TUTOR_ID
					, CAREER_START
					, CAREER_END
					, CAREER_CONTENT)
				VALUES
					(TUTOR_CAREER_SEQ.NEXTVAL
					, #{TUTOR_ID}
					, #{CAREER_START}
					, #{CAREER_END}
					, #{CAREER_CONTENT}
	</insert>
	
	<!-- 튜터 링크 삭제 -->
	<delete id="linkDelete" parameterType="hashmap">
	
		DELETE
		FROM 
			TUTOR_LINK
		WHERE 
			TUTOR_ID = #{TUTOR_ID}
	
	</delete>
	
	<!-- 튜터 링크 입력 -->
	<insert id="linkInsert" parameterType="hashmap">
		INSERT 
			INTO 
				TUTOR_LINK
					(LINK_ID
					, TUTOR_ID
					, LINK_CAT_ID
					, LINK_ADDR)
			VALUES
				(TUTOR_LINK_SEQ.NEXTVAL
				, #{TUTOR_ID}
				, #{LINK_CAT_ID}
				, #{LINK_ADDR})
	</insert>
	
	
	<!-- 튜터 기본 정보 수정 -->
	<update id="updateTutorInfo" parameterType="hashmap">
		UPDATE 
			TUTOR_INFO
		SET 
			TUTOR_NAME = #{TUTOR_NAME}
			, TELEPHONE = #{TELEPHONE}
			, INTRO = #{INTRO}
		WHERE 
			MEMBER_ID = #{MEMBER_ID}
	</update>	
	
	
	

</mapper>

